Copyright (c) 2012 Nauman (recluze)
See more at: http://csrdu.org/nauman  

Implementation of AVL trees in Python
Class AVL Tree supports the following functionality:
 - Insertion in the tree using balancing rules
 - Deletion along with updation 
 - Displaying tree in a pseudo structured way 
 - Inorder traversal 
 - Unit test cases to check for insertion, deletion and balance
 
While I didn't take anything from the original github repo from 
where this repo is forked, that is where I got the inspiration. 
So, do take a look there as well. That implementation is much more 
detailed. 

This code is available under MIT License.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.